trigger:
- master

pool: TestPool

variables: 
    - group: UAT

steps:
- script: echo $(parameterFileName) # uses macro syntax

- task: AzureFileCopy@4
  inputs:
    SourcePath: 'CreateWebApp'
    azureSubscription: 'AzureDeployConn'
    Destination: 'AzureBlob'
    storage: 'mb20210319a4pg7nidrkd6fm'
    ContainerName: 'projecttemplates'
  name: AzureFileCopy

- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'AzureDeployConn'
    subscriptionId: '9245ca19-7afc-427d-b9fa-aad41676a94d'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'AzureRmPipeline-rg'
    location: 'Australia East'
    templateLocation: 'URL of the file'
    csmFileLink: '$(AzureFileCopy.StorageContainerUri)CreateWebApp/azuredeploy2step.json$(AzureFileCopy.StorageContainerSasToken)'
    csmParametersFileLink: '$(AzureFileCopy.StorageContainerUri)CreateWebApp/$(parameterFileName)$(AzureFileCopy.StorageContainerSasToken)'
    overrideParameters: -storageName $(AzureFileCopy.StorageContainerUri) -storageSAS $(AzureFileCopy.StorageContainerSasToken)
    deploymentMode: 'Incremental'
    deploymentName: 'deploy1'
  name: AzureResourceDeployment

- task: AzureCLI@2
  inputs:
    azureSubscription: 'AzureDeployConn'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      $appId = (az ad app create --display-name AuthTest --homepage https://umb20210319webapp.azurewebsites.net --identifier-uris https://umb20210319webapp.azurewebsites.net --reply-urls https://umb20210319webapp.azurewebsites.net/.auth/login/aad/callback --query 'appId' -o tsv)
      az ad sp create --id $appId
      az ad app permission add --id $appId --api 00000002-0000-0000-c000-000000000000 --api-permissions 311a71cc-e848-46a1-bdf8-97ff7156d8e6=Scope
      az ad app permission add --id $appId --api 00000002-0000-0000-c000-000000000000 --api-permissions 5778995a-e1bf-45b8-affa-663a9f3f4d04=Scope
      #az ad app permission grant --id $appId --api 00000002-0000-0000-c000-000000000000
      #az ad app permission admin-consent --id $appId
      #az ad app permission grant --id b993ce7b-96cf-4639-9a24-1a4d0810de75 --api 00000002-0000-0000-c000-000000000000
      Write-Host "App ID: $appId"
      # addSpnToEnvironment: true
      #$appId = (az ad app create --display-name AuthTest --homepage https://umb20210319webapp.azurewebsites.net --identifier-uris https://umb20210319webapp.azurewebsites.net --reply-urls https://umb20210319webapp.azurewebsites.net/.auth/login/aad/callback --query 'appId' -o tsv)
      az login -u $(consentUser) -p $(consentPwd) --allow-no-subscriptions
      az ad app permission admin-consent --id $appId
      #az ad app permission grant --id b993ce7b-96cf-4639-9a24-1a4d0810de75 --api 00000002-0000-0000-c000-000000000000
      #Write-Host "App ID: $appId"
      az extension add -n azure-devops
      echo $(System.AccessToken) | az devops login
      az devops configure --defaults organization=https://dev.azure.com/matthewboler/ project="AzureDeploy" --use-git-aliases true
      az pipelines variable-group variable create --group-id 1 --name testvariable --value True --org https://dev.azure.com/matthewboler/ --project AzureDeploy
  # This only works if the Project Build Service has admin on the Variable group and fails
  # once the variable already exists
  env:
    AZURE_DEVOPS_CLI_PAT: $(System.AccessToken)
  